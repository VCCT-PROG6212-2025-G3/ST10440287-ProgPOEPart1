@model ProgPOE.Models.SubmitClaimViewModel
@{
    ViewData["Title"] = "Submit Claim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .upload-area {
        border: 2px dashed #007bff;
        border-radius: 8px;
        padding: 30px;
        text-align: center;
        background-color: #f8f9fa;
        transition: all 0.3s;
        cursor: pointer;
    }

        .upload-area:hover {
            border-color: #0056b3;
            background-color: #e9ecef;
        }

        .upload-area.dragover {
            border-color: #28a745;
            background-color: #d4edda;
        }

    .file-list {
        margin-top: 20px;
    }

    .file-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 15px;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .file-item-info {
        display: flex;
        align-items: center;
        flex: 1;
    }

    .file-icon {
        font-size: 24px;
        margin-right: 10px;
    }

    .file-name {
        font-weight: 500;
        margin-right: 10px;
    }

    .file-size {
        color: #6c757d;
        font-size: 0.875rem;
    }

    .remove-file-btn {
        padding: 2px 8px;
        font-size: 0.875rem;
    }

    .calculation-box {
        background-color: #e7f3ff;
        border-left: 4px solid #007bff;
        padding: 20px;
        margin-top: 20px;
    }

    .form-section {
        background-color: white;
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }
</style>

<div class="row mb-4">
    <div class="col-md-12">
        <h2>📝 Submit New Claim</h2>
        <p class="text-muted">Complete the form below to submit your monthly claim</p>
    </div>
</div>

<form asp-action="SubmitClaim" asp-controller="Home" method="post" enctype="multipart/form-data" id="claimForm">
    <div class="row">
        <div class="col-md-8">
            <!-- Claim Details Section -->
            <div class="form-section">
                <h5 class="mb-3">📋 Claim Details</h5>

                <div class="mb-3">
                    <label asp-for="MonthYear" class="form-label"></label>
                    <input asp-for="MonthYear" type="month" class="form-control" id="monthYear" required />
                    <span asp-validation-for="MonthYear" class="text-danger"></span>
                    <small class="form-text text-muted">Select the month and year for this claim</small>
                </div>

                <div class="mb-3">
                    <label asp-for="HoursWorked" class="form-label"></label>
                    <input asp-for="HoursWorked" type="number" step="0.5" class="form-control"
                           id="hoursWorked" min="0.1" max="744" required />
                    <span asp-validation-for="HoursWorked" class="text-danger"></span>
                    <small class="form-text text-muted">Enter total hours worked (0.1 - 744)</small>
                </div>

                <div class="mb-3">
                    <label asp-for="HourlyRate" class="form-label"></label>
                    <div class="input-group">
                        <span class="input-group-text">R</span>
                        <input asp-for="HourlyRate" type="number" step="0.01" class="form-control"
                               id="hourlyRate" min="1" max="9999.99" required />
                    </div>
                    <span asp-validation-for="HourlyRate" class="text-danger"></span>
                    <small class="form-text text-muted">Your hourly rate in Rands</small>
                </div>

                <div class="mb-3">
                    <label asp-for="Notes" class="form-label"></label>
                    <textarea asp-for="Notes" class="form-control" rows="4" maxlength="500"></textarea>
                    <span asp-validation-for="Notes" class="text-danger"></span>
                    <small class="form-text text-muted">Optional: Add any additional notes or details</small>
                </div>
            </div>

            <!-- Document Upload Section -->
            <div class="form-section">
                <h5 class="mb-3">📎 Supporting Documents</h5>
                <p class="text-muted mb-3">
                    Upload supporting documents such as timesheets, attendance records, or other relevant files.
                    <br>
                    <strong>Allowed formats:</strong> PDF, DOC, DOCX, XLSX, XLS, JPG, JPEG, PNG
                    <br>
                    <strong>Maximum file size:</strong> 5 MB per file
                </p>

                <!-- Upload Area -->
                <div class="upload-area" id="uploadArea">
                    <div class="mb-3">
                        <span style="font-size: 48px;">📁</span>
                    </div>
                    <h5>Drop files here or click to browse</h5>
                    <p class="text-muted mb-0">Select one or multiple files</p>
                    <input type="file"
                           name="Documents"
                           id="fileInput"
                           class="d-none"
                           multiple
                           accept=".pdf,.doc,.docx,.xlsx,.xls,.jpg,.jpeg,.png" />
                </div>

                <!-- File List -->
                <div class="file-list" id="fileList"></div>

                <!-- Upload Button -->
                <div class="mt-3 text-center">
                    <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('fileInput').click()">
                        📤 Browse Files
                    </button>
                </div>
            </div>
        </div>

        <!-- Summary Sidebar -->
        <div class="col-md-4">
            <div class="form-section sticky-top" style="top: 20px;">
                <h5 class="mb-3">💰 Claim Summary</h5>

                <div class="calculation-box">
                    <div class="mb-3">
                        <label class="text-muted">Hours Worked:</label>
                        <h4 id="displayHours">0.0</h4>
                    </div>
                    <div class="mb-3">
                        <label class="text-muted">Hourly Rate:</label>
                        <h4 id="displayRate">R 0.00</h4>
                    </div>
                    <hr>
                    <div>
                        <label class="text-muted">Total Amount:</label>
                        <h3 class="text-success" id="displayTotal">R 0.00</h3>
                    </div>
                </div>

                <div class="mt-3">
                    <div class="d-flex justify-content-between mb-2">
                        <span class="text-muted">Documents:</span>
                        <span class="badge bg-info" id="documentCount">0</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span class="text-muted">Status:</span>
                        <span class="badge bg-warning">Draft</span>
                    </div>
                </div>

                <hr>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-success btn-lg">
                        ✅ Submit Claim
                    </button>
                    <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-secondary">
                        ❌ Cancel
                    </a>
                </div>

                <div class="alert alert-info mt-3" role="alert">
                    <small>
                        <strong>📌 Note:</strong> Once submitted, your claim will be reviewed by the Programme Coordinator.
                    </small>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        // File handling variables
        let selectedFiles = [];
        const maxFileSize = 5 * 1024 * 1024; // 5MB
        const allowedExtensions = ['.pdf', '.doc', '.docx', '.xlsx', '.xls', '.jpg', '.jpeg', '.png'];

        // Initialize
        document.addEventListener('DOMContentLoaded', function () {
            updateCalculation();
            setupFileUpload();
            setupDragAndDrop();
        });

        // Setup file upload
        function setupFileUpload() {
            const fileInput = document.getElementById('fileInput');
            const uploadArea = document.getElementById('uploadArea');

            uploadArea.addEventListener('click', function () {
                fileInput.click();
            });

            fileInput.addEventListener('change', function (e) {
                handleFiles(e.target.files);
            });
        }

        // Setup drag and drop
        function setupDragAndDrop() {
            const uploadArea = document.getElementById('uploadArea');

            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                uploadArea.addEventListener(eventName, function () {
                    uploadArea.classList.add('dragover');
                }, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                uploadArea.addEventListener(eventName, function () {
                    uploadArea.classList.remove('dragover');
                }, false);
            });

            uploadArea.addEventListener('drop', function (e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                handleFiles(files);
            }, false);
        }

        // Handle selected files
        function handleFiles(files) {
            for (let file of files) {
                if (validateFile(file)) {
                    selectedFiles.push(file);
                }
            }
            displayFiles();
            updateDocumentCount();
        }

        // Validate file
        function validateFile(file) {
            const fileName = file.name.toLowerCase();
            const fileExtension = fileName.substring(fileName.lastIndexOf('.'));

            // Check file extension
            if (!allowedExtensions.includes(fileExtension)) {
                alert('File type not allowed: ' + file.name + '\nAllowed types: ' + allowedExtensions.join(', '));
                return false;
            }

            // Check file size
            if (file.size > maxFileSize) {
                alert('File too large: ' + file.name + '\nMaximum size: 5 MB');
                return false;
            }

            // Check for duplicates
            if (selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                alert('File already added: ' + file.name);
                return false;
            }

            return true;
        }

        // Display files
        function displayFiles() {
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileItem = createFileItem(file, index);
                fileList.appendChild(fileItem);
            });

            // Update actual file input
            updateFileInput();
        }

        // Create file item element
        function createFileItem(file, index) {
            const div = document.createElement('div');
            div.className = 'file-item';

            const fileExtension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
            const icon = getFileIcon(fileExtension);

            div.innerHTML = '<div class="file-item-info">' +
                '<span class="file-icon">' + icon + '</span>' +
                '<div>' +
                '<div class="file-name">' + file.name + '</div>' +
                '<div class="file-size">' + formatFileSize(file.size) + '</div>' +
                '</div>' +
                '</div>' +
                '<button type="button" class="btn btn-sm btn-outline-danger remove-file-btn" onclick="removeFile(' + index + ')">' +
                '❌ Remove' +
                '</button>';

            return div;
        }

        // Get file icon
        function getFileIcon(extension) {
            const icons = {
                '.pdf': '📕',
                '.doc': '📘',
                '.docx': '📘',
                '.xlsx': '📗',
                '.xls': '📗',
                '.jpg': '🖼️',
                '.jpeg': '🖼️',
                '.png': '🖼️'
            };
            return icons[extension] || '📄';
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes < 1024) return bytes + ' B';
            if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';
            return (bytes / (1024 * 1024)).toFixed(1) + ' MB';
        }

        // Remove file
        function removeFile(index) {
            selectedFiles.splice(index, 1);
            displayFiles();
            updateDocumentCount();
        }

        // Update file input with DataTransfer
        function updateFileInput() {
            const fileInput = document.getElementById('fileInput');
            const dataTransfer = new DataTransfer();

            selectedFiles.forEach(file => {
                dataTransfer.items.add(file);
            });

            fileInput.files = dataTransfer.files;
        }

        // Update document count
        function updateDocumentCount() {
            document.getElementById('documentCount').textContent = selectedFiles.length;
        }

        // Real-time calculation
        document.getElementById('hoursWorked').addEventListener('input', updateCalculation);
        document.getElementById('hourlyRate').addEventListener('input', updateCalculation);

        function updateCalculation() {
            const hours = parseFloat(document.getElementById('hoursWorked').value) || 0;
            const rate = parseFloat(document.getElementById('hourlyRate').value) || 0;
            const total = hours * rate;

            document.getElementById('displayHours').textContent = hours.toFixed(1);
            document.getElementById('displayRate').textContent = 'R ' + rate.toFixed(2);
            document.getElementById('displayTotal').textContent = 'R ' + total.toFixed(2);
        }

        // Form submission validation
        document.getElementById('claimForm').addEventListener('submit', function (e) {
            const hours = parseFloat(document.getElementById('hoursWorked').value);
            const rate = parseFloat(document.getElementById('hourlyRate').value);

            if (hours < 0.1 || hours > 744) {
                e.preventDefault();
                alert('⚠️ Hours worked must be between 0.1 and 744');
                return false;
            }

            if (rate < 1 || rate > 9999.99) {
                e.preventDefault();
                alert('⚠️ Hourly rate must be between R1.00 and R9999.99');
                return false;
            }

            if (selectedFiles.length === 0) {
                const confirmSubmit = confirm('⚠️ No documents uploaded. Do you want to submit without supporting documents?');
                if (!confirmSubmit) {
                    e.preventDefault();
                    return false;
                }
            }

            return true;
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}