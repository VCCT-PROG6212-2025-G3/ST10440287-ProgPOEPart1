@model List<ProgPOE.Models.Claim>
@{
    ViewData["Title"] = "My Claims";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .claim-card {
        border-left: 5px solid;
        margin-bottom: 20px;
        transition: transform 0.2s;
    }

        .claim-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        }

    .status-badge {
        font-size: 1rem;
        padding: 8px 15px;
    }

    .claim-pending {
        border-left-color: #ffc107;
    }

    .claim-approved {
        border-left-color: #28a745;
    }

    .claim-rejected {
        border-left-color: #dc3545;
    }

    .claim-returned {
        border-left-color: #17a2b8;
    }
</style>

<div class="row mb-4">
    <div class="col-md-12">
        <h2>📋 My Claims</h2>
        <p class="text-muted">View and track the status of your submitted claims</p>
    </div>
</div>

<!-- Summary Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center bg-primary text-white">
            <div class="card-body">
                <h3>@Model.Count</h3>
                <p class="mb-0">Total Claims</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-warning text-white">
            <div class="card-body">
                <h3>@Model.Count(c => c.Status == ProgPOE.Models.ClaimStatus.Pending || c.Status == ProgPOE.Models.ClaimStatus.PendingManager)</h3>
                <p class="mb-0">Pending</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-success text-white">
            <div class="card-body">
                <h3>@Model.Count(c => c.Status == ProgPOE.Models.ClaimStatus.Approved)</h3>
                <p class="mb-0">Approved</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-info text-white">
            <div class="card-body">
                <h3>R @Model.Where(c => c.Status == ProgPOE.Models.ClaimStatus.Approved).Sum(c => c.TotalAmount).ToString("N2")</h3>
                <p class="mb-0">Total Earnings</p>
            </div>
        </div>
    </div>
</div>

@if (Model.Count == 0)
{
    <div class="alert alert-info text-center" style="padding: 60px;">
        <h3>📭 No Claims Yet</h3>
        <p class="lead">You haven't submitted any claims yet.</p>
        <a href="@Url.Action("SubmitClaim", "Home")" class="btn btn-primary btn-lg mt-3">
            📝 Submit Your First Claim
        </a>
    </div>
}
else
{
    <!-- Claims List -->
    <div class="row">
        @foreach (var claim in Model)
        {
            var statusClass = claim.Status switch
            {
                ProgPOE.Models.ClaimStatus.Pending => "claim-pending",
                ProgPOE.Models.ClaimStatus.PendingManager => "claim-pending",
                ProgPOE.Models.ClaimStatus.Approved => "claim-approved",
                ProgPOE.Models.ClaimStatus.Rejected => "claim-rejected",
                ProgPOE.Models.ClaimStatus.Returned => "claim-returned",
                _ => ""
            };

            var statusBadge = claim.Status switch
            {
                ProgPOE.Models.ClaimStatus.Pending => "bg-warning",
                ProgPOE.Models.ClaimStatus.PendingManager => "bg-info",
                ProgPOE.Models.ClaimStatus.Approved => "bg-success",
                ProgPOE.Models.ClaimStatus.Rejected => "bg-danger",
                ProgPOE.Models.ClaimStatus.Returned => "bg-secondary",
                _ => "bg-dark"
            };

            var statusIcon = claim.Status switch
            {
                ProgPOE.Models.ClaimStatus.Pending => "⏳",
                ProgPOE.Models.ClaimStatus.PendingManager => "🔄",
                ProgPOE.Models.ClaimStatus.Approved => "✅",
                ProgPOE.Models.ClaimStatus.Rejected => "❌",
                ProgPOE.Models.ClaimStatus.Returned => "↩️",
                _ => "📋"
            };

            <div class="col-md-6 col-lg-4">
                <div class="card claim-card @statusClass">
                    <div class="card-header">
                        <h5 class="mb-0">
                            📅 @claim.MonthYear
                            <span class="badge @statusBadge status-badge float-end">
                                @statusIcon @claim.Status.ToString()
                            </span>
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-2">
                            <strong>Claim ID:</strong> CL-@claim.ClaimId.ToString("D6")
                        </p>
                        <p class="mb-2">
                            <strong>Hours Worked:</strong> @claim.HoursWorked
                        </p>
                        <p class="mb-2">
                            <strong>Hourly Rate:</strong> R @claim.HourlyRate.ToString("N2")
                        </p>
                        <hr>
                        <h4 class="text-success">
                            <strong>Total: R @claim.TotalAmount.ToString("N2")</strong>
                        </h4>
                        <p class="text-muted mb-2">
                            <small>Submitted: @claim.SubmissionDate.ToString("dd MMM yyyy")</small>
                        </p>

                        @if (claim.Documents.Any())
                        {
                            <p class="mb-2">
                                <span class="badge bg-info">📎 @claim.Documents.Count document(s)</span>
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(claim.LecturerNotes))
                        {
                            <p class="mb-2">
                                <strong>Notes:</strong><br>
                                <small>@claim.LecturerNotes</small>
                            </p>
                        }

                        @if (claim.Status == ProgPOE.Models.ClaimStatus.Rejected && !string.IsNullOrEmpty(claim.CoordinatorNotes))
                        {
                            <div class="alert alert-danger mt-2">
                                <strong>Rejection Reason:</strong><br>
                                <small>@claim.CoordinatorNotes</small>
                            </div>
                        }

                        <div class="mt-3">
                            <a href="@Url.Action("ViewClaim", "Home", new { id = claim.ClaimId })"
                               class="btn btn-sm btn-outline-primary">
                                👁️ View Details
                            </a>

                            @if (claim.Status == ProgPOE.Models.ClaimStatus.Approved)
                            {
                                <button class="btn btn-sm btn-outline-success" onclick="downloadReceipt(@claim.ClaimId)">
                                    💾 Receipt
                                </button>
                            }

                            @if (claim.Status == ProgPOE.Models.ClaimStatus.Pending)
                            {
                                <button class="btn btn-sm btn-outline-info" onclick="trackClaim(@claim.ClaimId)">
                                    📍 Track
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<div class="mt-4 text-center">
    <a href="@Url.Action("SubmitClaim", "Home")" class="btn btn-primary btn-lg">
        📝 Submit New Claim
    </a>
    <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-secondary btn-lg">
        🏠 Back to Dashboard
    </a>
</div>

<script>
    function downloadReceipt(claimId) {
        alert('💾 Download Receipt\n\nDownloading receipt for Claim ID: CL-' + claimId.toString().padStart(6, '0') + '\n\n⚠️ Feature coming soon!');
    }

    function trackClaim(claimId) {
        alert('📍 Track Claim\n\nClaim ID: CL-' + claimId.toString().padStart(6, '0') + '\n\nStatus: Pending Coordinator Review\nEstimated Processing: 3-5 business days\n\n⚠️ Detailed tracking coming soon!');
    }
</script>